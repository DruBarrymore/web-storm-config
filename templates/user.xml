<templateSet group="user">
  <template name="statlessComponent" value="import React from 'react'&#10;import PropTypes from 'prop-types'&#10;&#10;export const $variable_name$ = (props) =&gt; {}&#10;&#10;$variable_name$.propTypes = {}&#10;&#10;$variable_name$.defaultProps = {}&#10;&#10;$variable_name$.displayName = '$variable_name$'&#10;" description="" toReformat="true" toShortenFQNames="true">
    <variable name="variable_name" expression="camelCase(String)" defaultValue="&quot;nameOfComponent&quot;" alwaysStopAt="false" />
    <context>
      <option name="JSX_HTML" value="true" />
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="classComponent" value="import React, { PropTypes } from 'react'&#10;&#10;export class $className$ extends React.Component {&#10;&#9;static propTypes = {&#10;&#10;&#9;}&#10;&#9;static defaultProps = {&#10;&#10;&#9;}&#10;&#9;constructor (props) {&#10;&#9;&#9;super(props)&#10;&#9;&#9;&#9;&#10;&#9;}&#10;&#9;render () {&#10;       &#10;    }&#10;}" description="" toReformat="false" toShortenFQNames="true">
    <variable name="className" expression="camelCase(String)" defaultValue="&quot;insertClassName&quot;" alwaysStopAt="false" />
    <context>
      <option name="JSX_HTML" value="true" />
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="msg" value="'$msgID$': '$msgText$'," description="" toReformat="false" toShortenFQNames="true">
    <variable name="msgID" expression="" defaultValue="&quot;messageID&quot;" alwaysStopAt="true" />
    <variable name="msgText" expression="" defaultValue="&quot;messageText&quot;" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="export" value="export {$variable$} from '$path$'" description="" toReformat="false" toShortenFQNames="true">
    <variable name="variable" expression="" defaultValue="&quot;name&quot;" alwaysStopAt="true" />
    <variable name="path" expression="" defaultValue="&quot;path&quot;" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="mapState" value="const mapStateToProps = (state, props) =&gt; {}" description="" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JSX_HTML" value="true" />
    </context>
  </template>
  <template name="popup" value="import React, { PropTypes } from 'react'&#10;import { Popup } from '@sbol/lib.ui'&#10;import { __ } from 'sbtsbol-app'&#10;import _ from 'lodash'&#10;&#10;const a11y = {&#10;    ariaHideApp: true,&#10;    closeButtonTitle: __('Brokerage.popup.close.button.title'),&#10;    title: __('$title$'),&#10;}&#10;&#10;export const $variable_name$ = (props) =&gt; (&#10;    &lt;Popup&#10;        a11y={a11y}&#10;        title={__('$title$')}&#10;        size=&quot;One of: sm, md, lg, xl&quot;&#10;        onClose={props.onClose}&#10;        forceOpened={props.forceOpened}&#10;    &gt;&#10;        &#10;    &lt;/Popup&gt;&#10;)&#10;&#10;$variable_name$.propTypes = {&#10;    forceOpened: PropTypes.bool,&#10;    onClose: PropTypes.func&#10;}&#10;&#10;$variable_name$.defaultProps = {&#10;    forceOpened: false,&#10;    onClose: _.noop&#10;}&#10;&#10;$variable_name$.displayName = '$variable_name$'&#10;" description="" toReformat="false" toShortenFQNames="true">
    <variable name="title" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="variable_name" expression="fileNameWithoutExtension().split('-').join()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JSX_HTML" value="true" />
    </context>
  </template>
</templateSet>